'use strict';Object.defineProperty(exports,'__esModule',{value:!0});function add(x,y){if(y===void 0){return c=>add(x,c);}return x+y;}function addIndex(d){return function(e,...rest){let g=0;const newFn=(...args)=>e.apply(null,[...args,g++]);return d.apply(null,[newFn,...rest]);};}function adjust(h,j,k){if(j===void 0){return(l,m)=>adjust(h,l,m);}else if(k===void 0){return n=>adjust(h,j,n);}const q=k.concat();return q.map((r,s)=>{if(s===j){return h(k[j]);}return r;});}function filterObject(t,u){const v={};for(const w in u){if(t(u[w],w)){v[w]=u[w];}}return v;}function filter(z,A){if(arguments.length===1){return B=>filter(z,B);}if(A===void 0){return[];}if(!Array.isArray(A)){return filterObject(z,A);}let C=-1,D=0;const E=A.length,G=[];while(++C<E){const H=A[C];if(z(H)){G[D++]=H;}}return G;}function all(I,J){if(arguments.length===1){return K=>all(I,K);}return filter(I,J).length===J.length;}function any(L,M){if(arguments.length===1){return N=>any(L,N);}let O=0;while(O<M.length){if(L(M[O],O)){return!0;}O++;}return!1;}function allPass(P,x){if(arguments.length===1){return Q=>allPass(P,Q);}return!any(R=>!R(x),P);}function always(x){return()=>x;}function anyPass(S,x){if(arguments.length===1){return U=>anyPass(S,U);}return any(V=>V(x))(S);}function append(x,W){if(arguments.length===1){return X=>append(x,X);}if(typeof W==='string')return`${W}${x}`;const Y=W.concat();Y.push(x);return Y;}function curry(f,a=[]){return(...p)=>(o=>o.length>=f.length?f(...o):curry(f,o))([...a,...p]);}function assocRaw(Z,a1,b1){return Object.assign({},b1,{[Z]:a1});}const c1=curry(assocRaw);function both(x,y){if(arguments.length===1){return d1=>both(x,d1);}return e1=>x(e1)&&y(e1);}function complement(fn){return g1=>!fn(g1);}function compose(...fns){return(...args)=>{const h1=fns.slice();if(h1.length>0){const fn=h1.pop();let j1=fn(...args);while(h1.length>0){j1=h1.pop()(j1);}return j1;}return void 0;};}function concat(x,y){if(arguments.length===1){return k1=>concat(x,k1);}return typeof x==='string'?`${x}${y}`:[...x,...y];}function type(a){const l1=typeof a;if(a===null){return'Null';}else if(a===void 0){return'Undefined';}else if(l1==='boolean'){return'Boolean';}else if(l1==='number'){return'Number';}else if(l1==='string'){return'String';}else if(Array.isArray(a)){return'Array';}else if(a instanceof RegExp){return'RegExp';}const m1=a.toString();if(m1.startsWith('async')){return'Async';}else if(m1==='[object Promise]'){return'Promise';}else if(m1.includes('function')||m1.includes('=>')){return'Function';}return'Object';}function equals(a,b){if(arguments.length===1){return n1=>equals(a,n1);}if(a===b){return!0;}const o1=type(a);if(o1!==type(b)){return!1;}if(o1==='Array'){const p1=Array.from(a),q1=Array.from(b);if(p1.toString()!==q1.toString()){return!1;}let r1=!0;p1.forEach((s1,t1)=>{if(r1){if(s1!==q1[t1]&&!equals(s1,q1[t1])){r1=!1;}}});return r1;}if(o1==='Object'){const u1=Object.keys(a);if(u1.length!==Object.keys(b).length){return!1;}let v1=!0;u1.forEach(w1=>{if(v1){const x1=a[w1],y1=b[w1];if(x1!==y1&&!equals(x1,y1)){v1=!1;}}});return v1;}return!1;}function contains(x,z1){if(arguments.length===1){return A1=>contains(x,A1);}let B1=-1,C1=!1;while(++B1<z1.length&&!C1){if(equals(z1[B1],x)){C1=!0;}}return C1;}const dec=x=>x-1;function defaultTo(D1,E1){if(arguments.length===1){return F1=>defaultTo(D1,F1);}return E1===void 0||E1===null||Number.isNaN(E1)===!0?D1:E1;}function dissoc(G1,H1){if(arguments.length===1){return I1=>dissoc(G1,I1);}if(H1===null||H1===void 0){return{};}const J1={};for(const p in H1){J1[p]=H1[p];}delete J1[G1];return J1;}function divide(x,y){if(arguments.length===1){return K1=>divide(x,K1);}return x/y;}function drop(L1,x){if(arguments.length===1){return M1=>drop(L1,M1);}return x.slice(L1);}function dropLast(N1,x){if(arguments.length===1){return O1=>dropLast(N1,O1);}return x.slice(0,-N1);}function either(x,y){if(arguments.length===1){return P1=>either(x,P1);}return Q1=>x(Q1)||y(Q1);}function endsWith(R1,S1){if(arguments.length===1){return T1=>endsWith(R1,T1);}return S1.endsWith(R1);}function F(){return!1;}function find(fn,V1){if(arguments.length===1){return W1=>find(fn,W1);}return V1.find(fn);}function findIndex(fn,Y1){if(arguments.length===1){return Z1=>findIndex(fn,Z1);}const a2=Y1.length;let b2=-1;while(++b2<a2){if(fn(Y1[b2])){return b2;}}return-1;}function flatten(c2,d2){d2=d2===void 0?[]:d2;for(let i=0;i<c2.length;i++){if(Array.isArray(c2[i])){flatten(c2[i],d2);}else{d2.push(c2[i]);}}return d2;}function flipExport(fn){return(...input)=>{if(input.length===1){return f2=>fn(f2,input[0]);}else if(input.length===2){return fn(input[1],input[0]);}return void 0;};}function flip(fn,...input){return flipExport(fn);}function mapObject(fn,i2){const j2={};for(const k2 in i2){j2[k2]=fn(i2[k2],k2);}return j2;}function map(fn,m2){if(arguments.length===1){return n2=>map(fn,n2);}if(m2===void 0){return[];}if(!Array.isArray(m2)){return mapObject(fn,m2);}let o2=-1;const p2=m2.length,q2=Array(p2);while(++o2<p2){q2[o2]=fn(m2[o2]);}return q2;}function forEach(fn,s2){if(arguments.length===1){return t2=>forEach(fn,t2);}map(fn,s2);return s2;}function groupBy(fn,v2){if(arguments.length===1){return w2=>groupBy(fn,w2);}const x2={};for(let i=0;i<v2.length;i++){const y2=v2[i],z2=fn(y2);if(!x2[z2]){x2[z2]=[];}x2[z2].push(y2);}return x2;}function has(A2,B2){if(arguments.length===1){return C2=>has(A2,C2);}return B2[A2]!==void 0;}function head(a){if(typeof a==='string'){return a[0]||'';}return a[0];}function identity(x){return x;}function ifElse(D2,E2,F2){if(E2===void 0){return(G2,H2)=>ifElse(D2,G2,H2);}else if(F2===void 0){return I2=>ifElse(D2,E2,I2);}return J2=>{const K2=typeof D2==='boolean'?D2:D2(J2);if(K2===!0){return E2(J2);}return F2(J2);};}const inc=x=>x+1;function includes(x,y){if(arguments.length===1){return L2=>includes(x,L2);}return y.includes(x);}function indexBy(fn,N2){if(arguments.length===1){return O2=>indexBy(fn,O2);}const P2={};for(let i=0;i<N2.length;i++){const Q2=N2[i];P2[fn(Q2)]=Q2;}return P2;}function indexOf(x,R2){if(arguments.length===1){return S2=>indexOf(x,S2);}let T2=-1;const U2=R2.length;while(++T2<U2){if(R2[T2]===x){return T2;}}return-1;}function baseSlice(V2,W2,X2){let Y2=-1,Z2=V2.length;X2=X2>Z2?Z2:X2;if(X2<0){X2+=Z2;}Z2=W2>X2?0:X2-W2>>>0;W2>>>=0;const a3=Array(Z2);while(++Y2<Z2){a3[Y2]=V2[Y2+W2];}return a3;}function init(a){if(typeof a==='string'){return a.slice(0,-1);}return a.length?baseSlice(a,0,-1):[];}function is(b3,x){if(arguments.length===1){return c3=>is(b3,c3);}return x!=null&&x.constructor===b3||x instanceof b3;}function isNil(x){return x===void 0||x===null;}function join(d3,e3){if(arguments.length===1){return f3=>join(d3,f3);}return e3.join(d3);}function keys(x){return Object.keys(x);}function last(a){if(typeof a==='string'){return a[a.length-1]||'';}return a[a.length-1];}function lastIndexOf(x,g3){if(arguments.length===1){return h3=>lastIndexOf(x,h3);}let i3=-1;g3.map((j3,k3)=>{if(equals(j3,x)){i3=k3;}});return i3;}function length(x){return x.length;}function match(l3,x){if(arguments.length===1){return m3=>match(l3,m3);}const n3=x.match(l3);return n3===null?[]:n3;}function merge(o3,p3){if(arguments.length===1){return q3=>merge(o3,q3);}return Object.assign({},o3||{},p3||{});}function max(x,y){if(arguments.length===1){return r3=>max(x,r3);}return y>x?y:x;}function maxBy(fn,x,y){if(arguments.length===2){return t3=>maxBy(fn,x,t3);}else if(arguments.length===1){return(u3,v3)=>maxBy(fn,u3,v3);}return fn(y)>fn(x)?y:x;}function min(x,y){if(arguments.length===1){return w3=>min(x,w3);}return y<x?y:x;}function minByRaw(fn,x,y){return fn(y)<fn(x)?y:x;}const y3=curry(minByRaw);function modulo(x,y){if(arguments.length===1)return z3=>modulo(x,z3);return x%y;}function multiply(x,y){if(arguments.length===1)return A3=>multiply(x,A3);return x*y;}function none(fn,C3){if(arguments.length===1)return D3=>none(fn,D3);return C3.filter(fn).length===0;}function not(x){return!x;}function nth(E3,F3){if(arguments.length===1)return G3=>nth(E3,G3);const H3=E3<0?F3.length+E3:E3;return Object.prototype.toString.call(F3)==='[object String]'?F3.charAt(H3):F3[H3];}function omit(I3,J3){if(arguments.length===1){return K3=>omit(I3,K3);}if(J3===null||J3===void 0){return void 0;}const L3=typeof I3==='string'?I3=I3.split(','):I3,M3={};for(const N3 in J3){if(!L3.includes(N3)){M3[N3]=J3[N3];}}return M3;}function partialCurry(fn,P3={}){return Q3=>{if(type(fn)==='Async'||type(fn)==='Promise'){return new Promise((R3,S3)=>{fn(merge(Q3,P3)).then(R3).catch(S3);});}return fn(merge(Q3,P3));};}function path(T3,U3){if(arguments.length===1){return V3=>path(T3,V3);}if(U3===null||U3===void 0){return void 0;}let W3=U3,X3=0;const Y3=typeof T3==='string'?T3.split('.'):T3;while(X3<Y3.length){if(W3===null||W3===void 0){return void 0;}W3=W3[Y3[X3]];X3++;}return W3;}function pathOrRaw(Z3,a4,b4){return defaultTo(Z3,path(a4,b4));}const c4=curry(pathOrRaw);function pick(d4,e4){if(arguments.length===1){return f4=>pick(d4,f4);}if(e4===null||e4===void 0){return void 0;}const g4=typeof d4==='string'?d4.split(','):d4,h4={};let i4=0;while(i4<g4.length){if(g4[i4]in e4){h4[g4[i4]]=e4[g4[i4]];}i4++;}return h4;}function pickAll(j4,k4){if(arguments.length===1){return l4=>pickAll(j4,l4);}if(k4===null||k4===void 0){return void 0;}const m4=typeof j4==='string'?j4.split(','):j4,n4={};let o4=0;while(o4<m4.length){if(m4[o4]in k4){n4[m4[o4]]=k4[m4[o4]];}else{n4[m4[o4]]=void 0;}o4++;}return n4;}function pipe(...fns){return compose(...fns.reverse());}function pluck(p4,q4){if(arguments.length===1)return r4=>pluck(p4,r4);const s4=[];map(t4=>{if(!(t4[p4]===void 0)){s4.push(t4[p4]);}},q4);return s4;}function prepend(x,u4){if(arguments.length===1)return v4=>prepend(x,v4);if(typeof u4==='string'){return`${x}${u4}`;}const w4=u4.concat();w4.unshift(x);return w4;}function prop(x4,y4){if(arguments.length===1)return z4=>prop(x4,z4);return y4[x4];}function propEq(A4,x,B4){if(x===void 0){return(C4,D4)=>propEq(A4,C4,D4);}else if(B4===void 0){return E4=>propEq(A4,x,E4);}return B4[A4]===x;}function range(F4,G4){if(arguments.length===1)return H4=>range(F4,H4);const I4=[];for(let i=F4;i<G4;i++){I4.push(i);}return I4;}function reduce(fn,K4,L4){if(K4===void 0){return(M4,N4)=>reduce(fn,M4,N4);}else if(L4===void 0){return O4=>reduce(fn,K4,O4);}return L4.reduce(fn,K4);}function reject(fn,Q4){if(arguments.length===1)return R4=>reject(fn,R4);return filter(x=>!fn(x),Q4);}function repeat(x,S4){if(arguments.length===1){return T4=>repeat(x,T4);}const U4=Array(S4);return U4.fill(x);}function replace(V4,W4,X4){if(W4===void 0){return(Y4,Z4)=>replace(V4,Y4,Z4);}else if(X4===void 0){return a5=>replace(V4,W4,a5);}return X4.replace(V4,W4);}function reverse(b5){const c5=b5.concat();return c5.reverse();}function sort(fn,e5){if(arguments.length===1)return f5=>sort(fn,f5);const g5=e5.concat();return g5.sort(fn);}function sortBy(fn,i5){if(arguments.length===1){return j5=>sortBy(fn,j5);}const k5=i5.concat();return k5.sort((a,b)=>{const l5=fn(a),m5=fn(b);return l5<m5?-1:l5>m5?1:0;});}function split(n5,o5){if(arguments.length===1)return p5=>split(n5,p5);return o5.split(n5);}function splitEvery(q5,x){if(arguments.length===1)return r5=>splitEvery(q5,r5);const s5=q5>1?q5:1,t5=[];let u5=0;while(u5<x.length){t5.push(x.slice(u5,u5+=s5));}return t5;}function startsWith(x,y){if(arguments.length===1)return v5=>startsWith(x,v5);return y.startsWith(x);}function subtract(x,y){if(arguments.length===1)return w5=>subtract(x,w5);return x-y;}function T(){return!0;}function tail(x5){return drop(1,x5);}function take(y5,x){if(arguments.length===1)return z5=>take(y5,z5);if(typeof x==='string'){return x.slice(0,y5);}return baseSlice(x,0,y5);}function takeLast(A5,x){if(arguments.length===1)return B5=>takeLast(A5,B5);const C5=x.length;let D5=A5>C5?C5:A5;if(typeof x==='string'){return x.slice(C5-D5);}D5=C5-D5;return baseSlice(x,D5,C5);}function tap(fn,x){if(arguments.length===1)return F5=>tap(fn,F5);fn(x);return x;}function test(G5,H5){if(arguments.length===1)return I5=>test(G5,I5);return H5.search(G5)!==-1;}function times(fn,K5){if(arguments.length===1)return L5=>times(fn,L5);return map(fn,range(0,K5));}function toLower(x){return x.toLowerCase();}function toString(x){return x.toString();}function toUpper(x){return x.toUpperCase();}function trim(M5){return M5.trim();}function uniq(N5){let O5=-1;const P5=[];while(++O5<N5.length){const Q5=N5[O5];if(!contains(Q5,P5)){P5.push(Q5);}}return P5;}function uniqWith(fn,S5){if(arguments.length===1)return T5=>uniqWith(fn,T5);let U5=-1;const V5=S5.length,W5=[];while(++U5<S5.length){const X5=S5[U5],Y5=any(Z5=>fn(X5,Z5),W5);if(!Y5){W5.push(X5);}}return W5;}function update(a6,b6,c6){if(b6===void 0){return(d6,e6)=>update(a6,d6,e6);}else if(c6===void 0){return f6=>update(a6,b6,f6);}const g6=c6.concat();return g6.fill(b6,a6,a6+1);}function values(h6){const i6=[];for(const j6 in h6){i6.push(h6[j6]);}return i6;}function without(k6,l6){return reduce((m6,n6)=>!contains(n6,k6)?m6.concat(n6):m6,[],l6);}function zip(x,y){if(arguments.length===1)return o6=>zip(x,o6);return addIndex(reduce)((p6,q6,r6)=>y[r6]?p6.concat([[q6,y[r6]]]):p6,[],x);}function zipObj(x,y){if(arguments.length===1)return s6=>zipObj(x,s6);return x.reduce((t6,u6,i)=>{t6[u6]=y[i];return t6;},{});}exports.add=add;exports.addIndex=addIndex;exports.adjust=adjust;exports.all=all;exports.allPass=allPass;exports.always=always;exports.any=any;exports.anyPass=anyPass;exports.append=append;exports.assoc=c1;exports.both=both;exports.complement=complement;exports.compose=compose;exports.concat=concat;exports.contains=contains;exports.curry=curry;exports.dec=dec;exports.defaultTo=defaultTo;exports.dissoc=dissoc;exports.divide=divide;exports.drop=drop;exports.dropLast=dropLast;exports.either=either;exports.endsWith=endsWith;exports.equals=equals;exports.F=F;exports.filter=filter;exports.find=find;exports.findIndex=findIndex;exports.flatten=flatten;exports.flip=flip;exports.forEach=forEach;exports.groupBy=groupBy;exports.has=has;exports.head=head;exports.identity=identity;exports.ifElse=ifElse;exports.inc=inc;exports.includes=includes;exports.indexBy=indexBy;exports.indexOf=indexOf;exports.init=init;exports.is=is;exports.isNil=isNil;exports.join=join;exports.keys=keys;exports.last=last;exports.lastIndexOf=lastIndexOf;exports.length=length;exports.map=map;exports.match=match;exports.merge=merge;exports.max=max;exports.maxBy=maxBy;exports.min=min;exports.minBy=y3;exports.modulo=modulo;exports.multiply=multiply;exports.none=none;exports.not=not;exports.nth=nth;exports.omit=omit;exports.partialCurry=partialCurry;exports.path=path;exports.pathOr=c4;exports.pick=pick;exports.pickAll=pickAll;exports.pipe=pipe;exports.pluck=pluck;exports.prepend=prepend;exports.prop=prop;exports.propEq=propEq;exports.range=range;exports.reduce=reduce;exports.reject=reject;exports.repeat=repeat;exports.replace=replace;exports.reverse=reverse;exports.sort=sort;exports.sortBy=sortBy;exports.split=split;exports.splitEvery=splitEvery;exports.startsWith=startsWith;exports.subtract=subtract;exports.T=T;exports.tail=tail;exports.take=take;exports.takeLast=takeLast;exports.tap=tap;exports.test=test;exports.times=times;exports.toLower=toLower;exports.toString=toString;exports.toUpper=toUpper;exports.trim=trim;exports.type=type;exports.uniq=uniq;exports.uniqWith=uniqWith;exports.update=update;exports.values=values;exports.without=without;exports.zip=zip;exports.zipObj=zipObj;